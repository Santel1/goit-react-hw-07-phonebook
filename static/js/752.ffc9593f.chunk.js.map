{"version":3,"file":"static/js/752.ffc9593f.chunk.js","mappings":"2MAEaA,E,OAAkBC,GAAAA,IAAH,+6C,iBCFfC,EAAsB,SAAAC,GAAK,OAAIA,EAAMC,UAAUC,SAASC,KAA7B,EAC3BC,EAA0B,SAAAJ,GAAK,OAC1CA,EAAMC,UAAUC,SAASG,SADiB,EAE/BC,EAAsB,SAAAN,GAAK,OAAIA,EAAMC,UAAUC,SAASK,KAA7B,EAC3BC,EAAuB,SAAAR,GAAK,OAAIA,EAAMC,UAAUQ,MAApB,E,kBCEzC,EAJc,SAAAC,GACZ,OAAO,uBAAIA,EAAMC,UAClB,EC0HD,EA1GqB,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXX,GAAWY,EAAAA,EAAAA,IAAYf,GACvBM,GAAYS,EAAAA,EAAAA,IAAYV,GACxBG,GAAQO,EAAAA,EAAAA,IAAYR,GACpBG,GAASK,EAAAA,EAAAA,IAAYN,IAE3BO,EAAAA,EAAAA,YAAU,WACRH,GAASI,EAAAA,EAAAA,MACV,GAAE,CAACJ,IAEJ,IAuBMK,EAAkBf,EAASO,QAAO,SAAAS,GAAO,OAC7CA,EAAQC,KAAKC,cAAcC,SAASZ,EAAOW,cAAcE,OADZ,IAI/C,OACE,UAACzB,EAAD,YACE,eAAI0B,UAAU,iBAAd,SAA+B,eAC/B,kBAAMC,SA9Be,SAAAC,GACvBA,EAAMC,iBACN,IAGMC,EAAa,CACjBR,KAJWM,EAAMG,cAAcC,YAAYC,MAK3CC,MAJYN,EAAMG,cAAcI,cAAcF,OAOhDlB,GAASqB,EAAAA,EAAAA,IAAcN,IACvBO,QAAQC,IAAIR,GACZF,EAAMG,cAAcQ,OACrB,EAiBqCb,UAAU,gBAA5C,WACE,mBAAOA,UAAU,iBAAjB,WACE,0BAAM,UACN,kBACEA,UAAU,iBACVc,KAAK,OACLlB,KAAK,cACLmB,UAAQ,QAGZ,mBAAOf,UAAU,iBAAjB,WACE,0BAAM,YACN,kBACEA,UAAU,iBACVc,KAAK,OACLlB,KAAK,gBACLmB,UAAQ,QAGZ,mBAAQD,KAAK,SAASd,UAAU,kBAAhC,SAAkD,qBAKpD,4BACE,eAAIA,UAAU,iBAAd,SAA+B,cAC/B,kBACEgB,SAtCqB,SAAC,GAA2B,IAAfT,EAAc,EAAxBU,OAAUV,MACxClB,GAAS6B,EAAAA,EAAAA,IAAUX,GACpB,EAqCOP,UAAU,iBACVc,KAAK,OACLlB,KAAK,gBACLuB,GAAG,GACHC,YAAY,sBAIftC,IAAa,SAACuC,EAAA,EAAD,IACbrC,IAAS,SAAC,EAAD,UAAQA,KAElB,eAAIgB,UAAU,gBAAd,SACuB,OAApBN,GACCA,EAAgB4B,KAAI,YAA0B,IAAvBH,EAAsB,EAAtBA,GAAIvB,EAAkB,EAAlBA,KAAMY,EAAY,EAAZA,MAC/B,OACE,gBAAaR,UAAU,gBAAvB,WACE,4BACE,0BAAI,UACI,kBAAM,IAAEJ,MAEhB,yBAAG,QAAMY,SAEX,mBACER,UAAU,qBACVuB,QAAS,kBAnEGC,EAmEuBL,OAlEjD9B,GAASoC,EAAAA,EAAAA,IAAcD,IADG,IAAAA,CAmEH,EAFX,SAGC,qBAVML,EAeZ,QAIV,C","sources":["pages/ContactsPage.styled.jsx","redux/contactsSelectors.js","components/Error.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledPhonebook = styled.div`\n  padding: 30px;\n  .phonebookTitle {\n  }\n  .phonebookForm {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n  }\n  .phonebookInput {\n    padding: 10px;\n    border-radius: 10px;\n    outline: none;\n    border: 1px solid grey;\n    width: 300px;\n    transition: border 0.3s;\n  }\n\n  .phonebookInput:hover,\n  .phonebookInput:focus {\n    border: 1px solid #05da05;\n  }\n\n  .phonebookAddBtn {\n    display: block;\n    width: 200px;\n    padding: 10px;\n    border-radius: 10px;\n    border: 1px solid grey;\n    transition: all 0.3s;\n  }\n\n  .phonebookAddBtn:hover,\n  .phonebookAddBtn:focus {\n    background-color: #05da05;\n    color: white;\n  }\n\n  .phonebookLabel {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    font-size: 20px;\n  }\n  .phonebookList {\n    padding: 0 30px;\n    list-style: none;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr;\n    gap: 20px;\n  }\n\n  .phonebookItem {\n    display: flex;\n    justify-content: space-between;\n    flex-direction: column;\n    padding: 20px;\n    border: 1px solid grey;\n    border-radius: 10px;\n  }\n  .phonebookDeleteBtn {\n    width: 200px;\n    padding: 10px;\n    border-radius: 10px;\n    border: 1px solid grey;\n    transition: all 0.3s;\n  }\n\n  .phonebookDeleteBtn:hover,\n  .phonebookDeleteBtn:focus {\n    background-color: red;\n    color: white;\n  }\n\n  .phonebook {\n  }\n`;\n","export const selectContactsItems = state => state.phonebook.contacts.items;\nexport const selectContactsIsLoading = state =>\n  state.phonebook.contacts.isLoading;\nexport const selectContactsError = state => state.phonebook.contacts.error;\nexport const selectContactsFilter = state => state.phonebook.filter;\n","import React from 'react';\n\nconst Error = props => {\n  return <p>{props.children}</p>;\n};\n\nexport default Error;\n","import React, { useEffect } from 'react';\nimport { StyledPhonebook } from './ContactsPage.styled';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  addNewContact,\n  deleteContact,\n  fetchAllContacts,\n  setFilter,\n} from 'redux/contactsReducer';\n\nimport {\n  selectContactsError,\n  selectContactsFilter,\n  selectContactsIsLoading,\n  selectContactsItems,\n} from 'redux/contactsSelectors';\nimport { Loader } from 'components/Loader';\nimport Error from 'components/Error';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContactsItems);\n  const isLoading = useSelector(selectContactsIsLoading);\n  const error = useSelector(selectContactsError);\n  const filter = useSelector(selectContactsFilter);\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const handleAddContact = event => {\n    event.preventDefault();\n    const name = event.currentTarget.contactName.value;\n    const phone = event.currentTarget.contactNumber.value;\n\n    const newContact = {\n      name,\n      phone,\n    };\n\n    dispatch(addNewContact(newContact));\n    console.log(newContact);\n    event.currentTarget.reset();\n  };\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  const handleFilterContacts = ({ target: { value } }) => {\n    dispatch(setFilter(value));\n  };\n\n  const filteredContact = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase().trim())\n  );\n\n  return (\n    <StyledPhonebook>\n      <h1 className=\"phonebookTitle\">Phonebook</h1>\n      <form onSubmit={handleAddContact} className=\"phonebookForm\">\n        <label className=\"phonebookLabel\">\n          <span>Name</span>\n          <input\n            className=\"phonebookInput\"\n            type=\"text\"\n            name=\"contactName\"\n            required\n          />\n        </label>\n        <label className=\"phonebookLabel\">\n          <span>Number</span>\n          <input\n            className=\"phonebookInput\"\n            type=\"text\"\n            name=\"contactNumber\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className=\"phonebookAddBtn\">\n          Add contacts\n        </button>\n      </form>\n\n      <div>\n        <h2 className=\"phonebookTitle\">Contacts</h2>\n        <input\n          onChange={handleFilterContacts}\n          className=\"phonebookInput\"\n          type=\"text\"\n          name=\"contactFilter\"\n          id=\"\"\n          placeholder=\"Seatch contact\"\n        />\n      </div>\n\n      {isLoading && <Loader />}\n      {error && <Error>{error}</Error>}\n\n      <ul className=\"phonebookList\">\n        {filteredContact !== null &&\n          filteredContact.map(({ id, name, phone }) => {\n            return (\n              <li key={id} className=\"phonebookItem\">\n                <div>\n                  <h3>\n                    Name: <br /> {name}\n                  </h3>\n                  <p>Tel: {phone}</p>\n                </div>\n                <button\n                  className=\"phonebookDeleteBtn\"\n                  onClick={() => handleDeleteContact(id)}\n                >\n                  Delete contact\n                </button>\n              </li>\n            );\n          })}\n      </ul>\n    </StyledPhonebook>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["StyledPhonebook","styled","selectContactsItems","state","phonebook","contacts","items","selectContactsIsLoading","isLoading","selectContactsError","error","selectContactsFilter","filter","props","children","dispatch","useDispatch","useSelector","useEffect","fetchAllContacts","filteredContact","contact","name","toLowerCase","includes","trim","className","onSubmit","event","preventDefault","newContact","currentTarget","contactName","value","phone","contactNumber","addNewContact","console","log","reset","type","required","onChange","target","setFilter","id","placeholder","Loader","map","onClick","contactId","deleteContact"],"sourceRoot":""}